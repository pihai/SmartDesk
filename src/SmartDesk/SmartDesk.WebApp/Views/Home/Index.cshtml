@using System

@model SmartDesk.WebApp.ViewModels.DashboardViewModel

@{
  ViewData["Title"] = "Home Page";
}
<div class="row">
    <div class="col-lg-12">
        <div class="form-inline">
            <div class="input-group input-group-sm">
                <span class="input-group-addon" id="day-datepicker-addon">Date</span>
                <input type="text" class="form-control" style="width: 100px" id="day-datepicker" value="@(DateTime.Now.ToString("dd-MM-yyyy"))" aria-describedby="day-datepicker-addon">
            </div>
            <div class="input-group input-group-sm">
                <div class="last-update">
                    Last update: <span id="lastUpdate"></span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" style="margin-top: 20px">
  <div class="col-lg-2 col-md-3">
    <div class="panel panel-default tile">
      <div class="panel-body">
        <div id="offline" class="tile-value" style="color: #FF6C39; display: none">Offline</div>
        <div id="online" class="tile-value" style="color: #98E000; display: none">Online</div>
        <div class="tile-title">Status</div>
      </div>
    </div>
  </div>
  <div class="col-lg-2 col-md-3">
    <div class="panel panel-default tile">
      <div class="panel-body">
        <div class="tile-value" id="standing-time""></div>
        <div class="tile-title">Standing Today</div>
      </div>
    </div>
  </div>
  <div class="col-lg-2 col-md-3">
    <div class="panel panel-default tile">
      <div class="panel-body">
        <div class="tile-value" id="standing-ratio">55 %</div>
        <div class="tile-title">Standing Ratio</div>
      </div>
    </div>
  </div>
  <div class="col-lg-2 col-md-3">
    <div class="panel panel-default tile">
      <div class="panel-body">
        <div class="tile-value" id="active-time">6 h 35 min</div>
        <div class="tile-title">Active Today</div>
      </div>
    </div>
  </div>

  <div class="col-lg-4 col-md-6">
    <div id="dailyHistoryChart"></div>
  </div>
</div>

  <div class="row" style="margin-top: 20px;">
    <div class="col-lg-4">
      <div class="panel panel-default">
        <div class="panel-heading">
          <i class="fa fa-circle-o-notch fa-fw"></i> Today
        </div>
        <div class="panel-body">
          <div class="row">
            <div class="col-xs-8">
              <h3> Current status:</h3>
            </div>
            <div class="col-xs-4 " id="currentStatus"></div>
          </div>
          <div class="row">
            <div id="todayGauge" style="width: 100%; height: 300px; float: left"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="panel panel-default">
        <div class="panel-heading">
            <i class="fa fa-pie-chart fa-fw"></i>Day ratio
        </div>
        <div class="panel-body">
            <div id="dailyRatioChart"></div>
        </div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="panel panel-default">
        <div class="panel-heading">
          <i class="fa fa-bar-chart fa-fw"></i> Weekly
          <div class="pull-right">         
                <div class="" id="week"></div>
          </div>
        </div>
        <div class="panel-body">
          <div class="row">
            <div id="weeklyRatioChart"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

 


@section Scripts {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.1/css/bootstrap-datepicker.min.css" rel="stylesheet" />
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>

    <script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.1/js/bootstrap-datepicker.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment-with-locales.min.js"></script>

    <script>

        $(document).ready(function() {
            moment.locale('en', {
                week: { dow: 1 } // Monday is the first day of the week
            });

            /* styling highchart */
            Highcharts.theme = {
               /* colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', 
                         '#FF9655', '#FFF263', '#6AF9C4'],*/
                colors: ['#98E000', // green
                         '#FEC900', // yellow
                         '#FF6C39', // orange/red
                         '#2A97FF'  // blue
                ],
                chart: {
                    backgroundColor: {
                        linearGradient: [0, 0, 500, 500],
                        stops: [
                            [0, 'rgb(255, 255, 255)'],
                            [1, 'rgb(240, 240, 255)']
                        ]
                    },
                },
                title: {
                    style: {
                        color: '#333333',
                        font: 'bold 16px "Montserrat", Verdana, sans-serif'
                    }
                },
                subtitle: {
                    style: {
                        color: '#333333',
                        font: 'bold 12px "Montserrat", Verdana, sans-serif'
                    }
                },

                legend: {
                    itemStyle: {
                        font: '9pt Montserrat, Verdana, sans-serif',
                        color: '#333333'
                    },
                    itemHoverStyle:{
                        color: 'gray'
                    }   
                }
            };

            // Apply the theme
            Highcharts.setOptions(Highcharts.theme);       

            // init datepickers
            var dayDatepicker = $('#day-datepicker').datepicker({
                format: "dd-mm-yyyy",
                autoclose: true,
                todayBtn: true,
                endDate: "0d",
                weekStart: 1
            });
            dayDatepicker.on("changeDate", function(e) {
                updateData(); // update charts on change
            });

            function updateStatus() {
                $("#lastUpdate").text(moment().day(1).format("HH:mm:ss"));

                $.getJSON('@Url.Action("GetCurrentStatus", "Api", new {deviceid = Model.DeviceId})', {}, function(data) {
                    $("#online").toggle(data.Online);
                    $("#offline").toggle(!data.Online);
                });
            }

            function updateData() {
                var date = dayDatepicker.datepicker("getDate");


                $.getJSON(buildDateUrl('@Url.Action("GetDayRatio", "Api", new {year = "year", month = "month", day = "day", deviceid = Model.DeviceId})', date), {}, function(data) {
                    var active= data.Standing + data.Sitting;
                    $("#active-time").html(formatTime(active));
                    var standingRatio = active ==0 ? 0 : Math.ceil((data.Standing / active) * 100);
                    $("#standing-time").html(formatTime(data.Standing));
                    $("#standing-ratio").html(standingRatio + "<small> %</small>");

                    /* gauge */
                    var standing = data.Standing;
                    var targetStanding = @Model.StandingTarget.TotalSeconds;
                    var standingShare = (standing / targetStanding) * 100;
                    $('#todayGauge').highcharts({
                        chart: {
                            type: 'solidgauge'
                        },

                        title: null,

                        pane: {
                            center: ['50%', '85%'],
                            size: '150%',
                            startAngle: -90,
                            endAngle: 90,
                            background: {
                                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
                                innerRadius: '60%',
                                outerRadius: '100%',
                                shape: 'arc'
                            }
                        },

                        tooltip: {
                            enabled: false
                        },

                        // the value axis
                        yAxis: {
                            stops: [
                              [0.1, '#FF6C39'], // red
                              [0.5, '#FEC900'], // yellow
                              [0.9, '#98E000'] // green
                      
                            ],
                            lineWidth: 0,
                            minorTickInterval: null,
                            tickPixelInterval: 400,
                            tickWidth: 0,
                            labels: {
                                y: 16
                            },
                            min: 0,
                            max: standingShare > 100 ? standingShare : 100,
                            title: {
                                text: 'Standing duration share',
                                y: 20
                            }
                        },

                        plotOptions: {
                            solidgauge: {
                                dataLabels: {
                                    y: 5,
                                    borderWidth: 0,
                                    useHTML: true
                                }
                            }
                        },


                        credits: {
                            enabled: false
                        },

                        series: [
                          {
                              name: 'Duration',
                              data: [standingShare],
                              dataLabels: {
                                  format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                                    ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">'+Math.round(standingShare)+' <small> %</small></span><br/>' +
                                    '<span style="font-size:12px;color:#4a4a4a">' + formatTime(standing) + ' of ' + formatTime(targetStanding) + '</span></div>'
                              },
                              tooltip: {
                                  valueSuffix: ' %'
                              }
                          }
                        ]

                    });
                    /* ratio */
                    var arr = new Array();
                    arr[0] = ['Standing', data.Standing];
                    arr[1] = ['Sitting', data.Sitting];
                    arr[2] = ['Inactive', data.Inactive];

                    var chart = {
                        title: {
                            text: ''
                        },
                        exporting: {
                            enabled: false
                        },
                        chart: {
                            plotBackgroundColor: null,
                            plotBorderWidth: 0,
                            plotShadow: false
                        },
                        plotOptions: {
                            pie: {
                                startAngle: -90,
                                endAngle: 90,
                                center: ['50%', '75%']
                            }
                        },
                        tooltip: {
                            formatter: function() {
                                return '<b>' + formatTime(this.y) + '</b>' ;
                            }
                        },
                        series: [
                          {
                              type: 'pie',
                              name: 'Share',
                              innerSize: '50%',
                              data: arr
                          }
                        ]
                    };
                    $('#dailyRatioChart').highcharts(chart);


                });
                /* history */
                $.getJSON(buildDateUrl('@Url.Action("GetDayHistory", "Api", new {year = "year", month = "month", day = "day", deviceid = Model.DeviceId})', date), {}, function(data) {
                    $("#dayHistory").text(JSON.stringify(data));

                    var inactiveData = new Array();
                    var standingData = new Array();
                    var sittingData = new Array();

                    for (var i = 0; i < data.length; i++) {

                        switch (data[i].ActivityType) {
                            case "Standing":
                                standingData.push([Date.parse(data[i].StartDate), 1]);
                                standingData.push([Date.parse(data[i].EndDate), 1]);
                                standingData.push([Date.parse(data[i].EndDate), null]);
                                break;
                            case "Sitting":
                                sittingData.push([Date.parse(data[i].StartDate), 1]);
                                sittingData.push([Date.parse(data[i].EndDate), 1]);
                                sittingData.push([Date.parse(data[i].EndDate), null]);
                                break;
                            case "Inactive":
                                inactiveData.push([Date.parse(data[i].StartDate), 1]);
                                inactiveData.push([Date.parse(data[i].EndDate), 1]);
                                inactiveData.push([Date.parse(data[i].EndDate), null]);
                                break;
                        }
                    }

                    $('#dailyHistoryChart').highcharts({
                        title: {
                            text: 'Today', margin: 0, align: "left"
                        },
                        chart: {
                            type: 'area',
                            height: 97
                        },
                        exporting: {
                            enabled: false
                        },
                        xAxis: {
                            type: 'datetime',
                            tickPixelInterval: 150,
                            //lineWidth: 0,
                            //minorGridLineWidth: 0,
                            //lineColor: 'transparent',
                            //labels: { enabled: false },
                            //minorTickLength: 0,
                            //tickLength: 0
                        },
                        yAxis: {
                            title: '',
                            lineWidth: 0,
                            gridLineWidth: 0,
                            minorGridLineWidth: 0,
                            lineColor: 'transparent',
                            labels: { enabled: false },
                            minorTickLength: 0,
                            tickLength: 0
                        },
                        plotOptions: {
                            area: {
                                lineWidth: 0,
                                marker: {
                                    enabled: false,
                                    states: {
                                        hover: {
                                            enabled: false
                                        }
                                    }
                                }
                            }
                        },
                        legend: {
                            enabled: false
                        },
                        series: [
                          {
                              name: 'Standing',
                              data: standingData
                          }, {
                              name: 'Sitting',
                              data: sittingData
                          }, {
                              name: 'Inactive',
                              data: inactiveData
                          }
                        ]

                    });

                });

                /* weekly data */


                var firstDate = moment(date).day(1).format("DD-MM-YYYY");
                var lastDate = moment(date).day(7).format("DD-MM-YYYY");
                $("#week").text(firstDate + " - " + lastDate);
                $.getJSON(buildDateUrl('@Url.Action("GetWeekRatio", "Api", new {year = "year", week = "week", deviceid = Model.DeviceId})', date), {}, function(data) {


                    var standingData = new Array();
                    var sittingData = new Array();
                    var inactiveData = new Array();
                    for (var i = 0; i < data.length; i++) {
                        standingData.push(data[i].Standing);
                        sittingData.push(data[i].Sitting);
                        inactiveData.push(data[i].Inactive);
                    }
                    var weekSeries = new Array();
                    weekSeries.push({ name: 'Standing', data: standingData });
                    weekSeries.push({ name: 'Sitting', data: sittingData });
                    weekSeries.push({ name: 'Inactive', data: inactiveData });

                    $('#weeklyRatioChart').highcharts({
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: ''
                        },
                        xAxis: {
                            categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
                        },
                        plotOptions: {
                            column: {
                                stacking: 'normal'
                            }
                        },
                        tooltip: {
                            formatter: function() {
                                return '<b>'+this.series.name +'</b> on <b>' + this.x + '</b> : <b>' + formatTime(this.y) + '</b>' ;
                            }
                        },
                        series: weekSeries
                    });
                });

            }


            setInterval(function() {
                updateStatus();
                // todo - only update data when it's the current day/week
                updateData();              
            }, 30000);

            updateData();
            updateStatus();

            function buildDateUrl(url, date) {
                return url.replace("year", date.getFullYear()).replace("month", (date.getMonth() + 1)).replace("day", date.getDate()).replace("week", date.getWeek() - 1);
            }
        });

    </script>
}
